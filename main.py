import pandas as pd
import numpy as np
from prophet import Prophet
import streamlit as st
import matplotlib.pyplot as plt
from datetime import datetime, timedelta

# Gera dados de vendas simulando maior volume em dezembro
def gerar_dados_vendas():
    datas = pd.date_range(end=datetime.today(), periods=1460)
    vendas = []

    for data in datas:
        base = 100 + np.random.normal(0, 10)
        if data.month == 5:
            base *= 1.4  # aumento sazonal em dezembro
        vendas.append(max(0, base))  # evitar vendas negativas

    df = pd.DataFrame({'data': datas, 'vendas': vendas})
    df.to_csv("vendas.csv", index=False)
    return df

# Gera dados se n칚o existir
try:
    df = pd.read_csv("vendas.csv")
except FileNotFoundError:
    df = gerar_dados_vendas()

# Streamlit interface
st.title("游닍 Previs칚o de Demanda com Sazonalidade")
st.write("Sistema de Supply Chain com previs칚o baseada em dados hist칩ricos")

# Mostra dados
st.subheader("游늵 Dados de Vendas")
st.line_chart(df.set_index("data")["vendas"])

# Preparar para o Prophet
df_prophet = df.rename(columns={"data": "ds", "vendas": "y"})

# Criar e treinar modelo
modelo = Prophet()
modelo.fit(df_prophet)

# Prever pr칩ximos 30 dias
futuro = modelo.make_future_dataframe(periods=30)
previsao = modelo.predict(futuro)

# Gr치fico da previs칚o
st.subheader("游늳 Previs칚o de Vendas (pr칩ximos 30 dias)")
fig = modelo.plot(previsao)
st.pyplot(fig)

# Tabela com a previs칚o
st.subheader("游늶 Tabela de Previs칚o")
st.dataframe(previsao[["ds", "yhat", "yhat_lower", "yhat_upper"]].tail(30).round(2))
